//=========================================================
//HW#: HW1P2 queue application (generate all strings)
//Your name: Chris Edusada
//Complier:  g++ compiler
//File type: client program client2.cpp
//=========================================================

using namespace std;
#include <iostream>
#include <stdlib.h>
#include <string>
#include "queue.h"

// PURPOSE: Using a queue, generate 50 strings using string characters A, B, and C.
// ALGORITHM: This algorithm is designed by first adding elements 'A', 'B', and  'C' into the queue using
// an array of strings (strArray). An element is removed from the queue and characters from the strArray array are
// added to the element to form new strings. These strings are printed to the console and added back to the queue.
// Generating new strings will then stop once the max size of 50 strings has been reached.

int main()
{
  string strArray[3] = { "A", "B", "C" }; //Add 'A', 'B', and 'C' into the queue.
  string temp; //Temp variable used when removing character from the queue.
  string newStr; //Store new string
  queue myQueue; //Create queue object.

  try
  {
    //Add 'A', 'B', and 'C' to the queue.
    for (int i = 0; i < 3; i++)
    {
      myQueue.add(strArray[i]); //Add element from strArray into the queue.
      cout << strArray[i] << endl;
    }

    //Generate the strings and end when reaching queue size.
    while (!myQueue.isFull()) //While loop indefinitely until 50 strings have been generated.
    {
      myQueue.remove(temp); //Remove from queue and store into temp.

      // Strings are generated by concatenating elements removed from queue with a character from strArray.
      for (int i = 0; i < 3; i++)
      {
        newStr = temp + strArray[i]; //Concatenate temp element and element from the strArray array.
        myQueue.add(newStr);  //Add new string into queue.
        cout << newStr << endl;
      }
    } //End of while.
  } //End of try.

  //Catching exceptions.
  catch (queue::Overflow)
  {
    cerr << "Error: Overlow. The queue is full of characters." << endl;
  }
  return 0;
}
